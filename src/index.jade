doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title NodeBots at scale

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        a(href="http://nearform.com" style="width: 20%")
          img(src="./images/nearform.svg")
        h1 NodeBots
          br
          | at Scale
        h3 by&nbsp;
          a(href="http://twitter.com/matteocollina") @matteocollina

      section
        h1 NodeBots
        .nodebot
          .icon
            .bobble
            .antenna
            .head
              div(class="eye left")
              div(class="eye right")
            .neck
            .neck
        .copyright Credits
          a(href="http://github.com/nodebots") &nbsp;http://github.com/nodebots

      section
        img(src="images/equation.png")
        .copyright Credits
          a(href="http://github.com/nodebots") &nbsp;http://github.com/nodebots

      section
        h3 JS robotics modules
        ul.bullet
          li
            a(href="http://npm.im/johnny-five") johnny-five
          li
            a(href="http://npm.im/node-serial-port") serial-port
          li ... and many more!

      section(data-bespoke-backdrop='arduino').trans
        .copyright 
          img(src="images/cc_attribution.png")
          | &nbsp;Photo by
          a(href="https://www.flickr.com/photos/snootlab/6052455554/")
            | &nbsp;Snootlab

      section(data-bespoke-backdrop='usb').trans
        .copyright 
          img(src="images/cc_attribution.png")
          | &nbsp;Photo by
          a(href="https://www.flickr.com/photos/oskay/2418503818/")
            | &nbsp;Windell Oskay

      section(data-bespoke-backdrop='laptop').trans

      section
        h3 Arduino + USB cable + Laptop = NodeBot
        .nodebot
          .icon
            .bobble
            .antenna
            .head
              div(class="eye left")
              div(class="eye right")
            .neck
            .neck
        .copyright Credits
          a(href="http://github.com/nodebots") &nbsp;http://github.com/nodebots

      section
        h3 Prototypes

        cite(style="width: 80%") "A prototype is an early sample, model, or release of a product built to test a concept or process or to act as a thing to be replicated or learned from."
          | -&nbsp;
          a(href="https://en.wikipedia.org/wiki/Prototype") from Wikipedia

      section
        img(src="../images/wintersmith.jpg" style="height: 90%")

      section(data-bespoke-backdrop='snow').trans
        h2(style="color: white") All snowflakes are unique

      section(data-bespoke-backdrop='snow').trans
        h2(style="color: white") Each robot is its own snowflake

      section(data-bespoke-backdrop='nodeconfeu').trans

      section(data-bespoke-backdrop='cian').trans
        .copyright(style="color: white") photo by&nbsp;
          a(href="https://twitter.com/fotoverite" style="color: white") Matthew Bergman

      section
        h3 Julian Cheal @ JSConf Budapest
        img(src='images/julian.jpg' style='width: 90%')

      section
        h2 Cocktail Robot!

        ul.bullet
          li Three pumps for three ingredients
          li 12V relays for turning them on and off
          li Brought to the network by a Raspberry Pi 2

      section
        h2 The pumps
        ul.bullet
          li Peristaltic pumps for aquariums
          li powered by 12V
          li on/off behavior
          li no pulse wide modulation needed

      section
        h2 Our goal for NodeConf.eu
        ul.bullet
          li Serve 150 cocktails in 1 hour and a half
          li 90 minutes for 150 cocktails
          li 3 minutes for a cocktail
          li 150 * 3 / 9 = 3.33
          li Redundancy: 6 robots

      section
        h2 The problem
        ul.bullet
          li We decided to control 6 pumps from a Pi2
          li Wi-Fi!
          li Circuit Design?

      section
        h2 Controlling circuit
        img(src="../images/schema2.svg" style="height: 80%")

      section
        h2 Controlling circuit
        ul.bullet
          li 6 pumps x 3 = 18 pumps
          li 18 transistors
          li 18 diodes
          li 3 x prototyping boards

      section
        h2 Too much soldering!

      section(data-bespoke-backdrop='norway').trans
        h2(style="color: white") My 2-week vacation

      section(data-bespoke-backdrop='hammer').trans
        h2(style="color: white") The engineering solution

      section
        h2 No diode
        img(src="../images/schema.svg" style="height: 80%")

      section
        h2 Sourcing parts
        ul.bullet
          li 6 pumps x 3 + 1 = 19 pumps
          li 20 transistors
          li 5 x prototyping boards
          li Some 2.2KOHM resistors
          li LOADS of wires

      section
        h2 Lots of soldering
        h3 ..and burns

        img(src='images/IMG_3180.jpg' style='height: 80%')

      section
        h2 Architecture Requirements
        ul.bullet
          li Control panel & status board
          li Robot code on the Pi
          li Robot code agnostic to the recepies
          li Recepies on the panel's server
          li Persistent job queue
          li 3 days to write it!

      section
        h2 Using a pub/sub broker

      section
        h2 Publish-Subscribe
        img(src="images/pubsub.png", style="height: 100%")

      section.full-imgs
        img(src="images/mqttorg.svg")

      section
        h2 MQTT
        ul
          li publish/subscribe protocol
          li multiple quality of service level..
          li ..with at-least-once and exactly-once semantics
          li low overhead (2 bytes at minimum)
          li offline messaging
          li retained messages, like a key/value store
          li can run over WebSocket

      section
        div(style='width: 90%;')
          img(src='images/MQTT.js.png' style='width: 50%; display: block;')
          img(src='images/johnny-five.png' style='width: 50%; display: block;')

      section
        h2 MQTT.js example
        pre
          code.language-javascript.
            var client = mqtt.connect()
            client.publish('msg', 'hello', (err) => {
              console.log('sent!', err)
            })
            client.subscribe("msg/#")
            client.on('message', (topic, payload) => {
              console.log(topic, payload.toString())
            })

      section
        h2 Message Flow
        img(src="images/pubsub-arch.png", style="height: 100%")

      section
        h2 Problem: The interface
        img(src="../images/pushbutton.jpg", style="height: 80%")

      section
        h2 Problem: The interface
        img(src="../images/pushbutton2.jpg", style="height: 80%")

      section
        h2 Button controlling circuit
        img(src="../images/schema3.svg", style="height: 80%")

      section
        h2 We were one TIP120 short
        img(src="../images/twitter.png", style="height: 80%")

      section
        h2 Solution we built one!
        ul.bullet
          li the TIP120 is controlled by voltage that can drive high currents
          li we had a NPN transistor controlled by voltage that can drive low currents
          li we had a transistor controlled by low currents that can drive high currents
          li remembering my analog electronics exam took 1 day

      section
        h2 One last problem

      section(data-bespoke-backdrop='bottle').trans
        h2(style="color: white; margin-left: 20%;") Viscosity

      section
        h2 In the process..

        ul.bullet
          li We did a lot of testing..
          li ..and tasting
          li We fried 2 Raspberry Pi
          li We popped 4 transistors
          li ..and made one :)
          li We wired 200+ wires
          li We soldered five boards
          li We live-deployed 10+ times while serving cocktails

      section
        div(style='width: 90%; heigth: 90%;')
          video(autoplay loop style='width: 50%; display: block; float: right; position: relative;')
            source(src="images/IMG_3218.m4v" type="video/mp4")
          video(autoplay loop style='width: 50%; display: block; float: left; position: relative;')
            source(src="images/IMG_3199.m4v" type="video/mp4")

      section(data-bespoke-backdrop='robot1').trans

      section(data-bespoke-backdrop='robot2').trans

      section(data-bespoke-backdrop='robot3').trans
        .copyright(style="color: white") photo by&nbsp;
          a(href="https://twitter.com/fotoverite" style="color: white") Matthew Bergman

      section(data-bespoke-backdrop='robot').trans
        .copyright(style="color: white") photo by&nbsp;
          a(href="https://twitter.com/fotoverite" style="color: white") Matthew Bergman

      section(data-bespoke-backdrop='callback-hell').trans

      section
        h2 Unsolved problems
        ul.bullet
          li deploying code to the 4 board is hard
          li WiFi is hard
          li configuration is usually complex

      section
        h2 Lesson Learned
        ul.bullet
          li "do or do not, there is no try"
          li resiliency can get you where you want
          li DO SOURCE YOUR PARTS CAREFULLY
          li keep it simple
          li building snowflakes is fun!

      section
        h2 Open Source

        ul
          li workaholic-ui - https://github.com/thekemkid/workaholic-ui
          li robot - https://github.com/darragh-hayes/robot
          li cocktail-control - http://github.com/mcollina/cocktail-control

      section
        h2 The Team!
        ul.bullet
          li Darragh Hayes
          li Glen Keane
          li Marco Piraccini
          li Julian Cheal
          li Matteo Collina

      section(data-bespoke-backdrop='joe').trans

      section.full-imgs
        img(src='images/me.png')
        h3
          a(href='http://github.com/mcollina') http://github.com/mcollina

      section
        h1 Thanks!
        a(href="http://nearform.com" style="width: 20%")
          img(src="./images/nearform.svg")
        br
        h3 <a href="mailto:matteo.collina@nearform.com">matteo.collina@nearform.com</a>
        h3 <a href="http://twitter.com/matteocollina">@matteocollina</a> on Twitter
        h3 <a href="http://www.nearform.com">www.nearform.com</a>


    script(src='build/build.js')
